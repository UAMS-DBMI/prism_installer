---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  ports:
  - name: mongo
    port: 27017
  selector:
    app: mongo
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: bitnami/mongodb:latest
        imagePullPolicy: Always
        env:
        - name: MONGODB_USERNAME
          valueFrom:
            secretKeyRef:
              key: database-user
              name: mongodb
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: mongodb
        - name: MONGODB_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: mongodb
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-admin-password
              name: mongodb
        ports:
        - containerPort: 27017
          name: mongo
          protocol: TCP
        # readinessProbe:
        #   failureThreshold: 3
        #   httpGet:
        #     path: /v1/other/test
        #     port: 8000
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        #   periodSeconds: 2
        #   successThreshold: 1
        #   timeoutSeconds: 1
        volumeMounts:
        - mountPath: /bitnami/mongodb/data
          name: mongodb-data
        # volumeMounts:
        # - mountPath: /storage
        #   name: core-persistent-storage
      restartPolicy: Always
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb
      # volumes:
      # - name: core-persistent-storage
      #   persistentVolumeClaim:
      #     claimName: core-pv-claim-auto
